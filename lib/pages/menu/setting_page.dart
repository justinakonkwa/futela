import 'package:fluentui_system_icons/fluentui_system_icons.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_translate/flutter_translate.dart';import 'package:futela/authentification/login_page.dart';import 'package:futela/screens/compte_screen.dart';import 'package:futela/screens/user_screen.dart';import 'package:futela/widgets/bouton_next.dart';import 'package:provider/provider.dart';import 'package:futela/modeles/user_provider.dart';import 'package:futela/theme/theme_provider.dart';import 'package:futela/widgets/app_text.dart';import 'package:futela/widgets/app_text_large.dart';import 'package:futela/widgets/constantes.dart';import 'package:futela/widgets/lign.dart';import 'package:futela/widgets/message_widget.dart';import 'package:futela/language/choose_language.dart';class SettingPage extends StatefulWidget {  const SettingPage({super.key});  @override  State<SettingPage> createState() => _UserDetailsPageState();}class _UserDetailsPageState extends State<SettingPage> {  @override  Widget build(BuildContext context) {    final userProvider = Provider.of<UserProvider>(context);    final userInfo = userProvider.currentUserData;    return Scaffold(      appBar: AppBar(        automaticallyImplyLeading: false,        title: AppText(text: 'Profil'),        centerTitle: false,        actions: const [          Padding(            padding: EdgeInsets.all(8.0),            child: Icon(CupertinoIcons.bell),          ),        ],      ),      body: SingleChildScrollView(        padding: const EdgeInsets.all(16.0),        child: Column(          children: [            userInfo == null                ? Center(                    child: Padding(                      padding: const EdgeInsets.only(bottom: 20.0),                      child: Column(                        children: [                          Icon(Icons.error_outline_rounded),                          AppText(                            text: 'Aucune information utilisateur disponible.',                            color: Colors.grey,                          ),                        ],                      ),                    ),                  )                : _buildProfileSection(userInfo),            const Lign(indent: 20, endIndent: 20),            const SizedBox(height: 16),            _buildSettingsGroup(              title: 'Paramètres Utilisateur',              items: [                _buildListItem(                  icon: CupertinoIcons.person,                  title: 'Informations personnelles',                  onTap: () {                    Navigator.of(context).push(                      MaterialPageRoute(                        builder: (context) => UserScreen(),                      ),                    );                  },                ),                _buildListItem(                  icon: CupertinoIcons.gear_alt,                  title: 'Compte',                  onTap: () {                    Navigator.push(                      context,                      MaterialPageRoute(                        builder: (context) => CompteScreen(),                      ),                    );                  },                ),                _buildListItem(                  icon: CupertinoIcons.lock,                  title: 'Vie privée et sécurité',                  onTap: () {},                ),                _buildListItem(                  icon: CupertinoIcons.house,                  title: 'Mes logements',                  onTap: () {},                ),              ],            ),            const SizedBox(height: 16),            _buildSettingsGroup(              title: 'Préférences',              items: [                _buildSettingItem(                  context: context,                  icon: Icons.translate_outlined,                  title: translate("settings.language"),                  onTap: () => showLanguagePopup(context: context),                ),                Consumer<ThemeProvider>(                  builder: (context, provider, child) {                    bool theme = provider.currentTheme;                    return _buildSettingItem(                      context: context,                      icon: theme                          ? FluentIcons.brightness_high_48_filled                          : Icons.dark_mode,                      title: theme                          ? translate('theme.light')                          : translate('theme.dark'),                      onTap: () => provider.changeTheme(!theme),                    );                  },                ),              ],            ),            const SizedBox(height: 16),            _buildSettingsGroup(              title: 'Assistance',              items: [                _buildListItem(                  icon: CupertinoIcons.checkmark_seal,                  title: 'Politique de confidentialité',                  onTap: () {},                ),                _buildListItem(                  icon: CupertinoIcons.lock_shield,                  title: 'Termes et conditions',                  onTap: () {},                ),                _buildListItem(                  icon: CupertinoIcons.phone,                  title: 'Contactez-nous',                  onTap: () => _showContactDialog(context),                ),                _buildListItem(                  icon: CupertinoIcons.star_lefthalf_fill,                  title: 'Laisser un avis',                  onTap: () {},                  showDivider: false,                ),                sizedbox,                sizedbox,                NextButton(                  height: 40,                  color: Theme.of(context).colorScheme.primary,                  onTap: () {                    if (userProvider.isLoggedIn) {                      userProvider.logout();                    } else {                      LoginPage(                        onLoginSuccess: (userData) {                          userProvider.login(                            userData['username'],                            userData['password'],                          );                        },                      );                    }                  },                  child: AppText(                    text: userProvider.isLoggedIn ? "Déconnexion" : "Connexion",                    color: Colors.white,                  ),                ),                sizedbox,                sizedbox,                NextButton(                  onTap: () {},                  color: Theme.of(context).highlightColor,                  child: AppText(text: 'Passer en mode commissionnaire'),                ),                sizedbox,                sizedbox,              ],            ),          ],        ),      ),    );  }  Widget _buildProfileSection(userInfo) {    return Row(      children: [        CircleAvatar(          radius: 40,          backgroundColor: Theme.of(context).primaryColor,        ),        const SizedBox(width: 16),        Column(          crossAxisAlignment: CrossAxisAlignment.start,          children: [            AppTextLarge(text: userInfo['name'], size: 16),            SizedBox(height: 8),            AppText(              text: userInfo['firstname'],            ),          ],        ),        const Spacer(),        const Icon(Icons.arrow_forward_ios_outlined, size: 20),      ],    );  }  Widget _buildSettingsGroup(      {required String title, required List<Widget> items}) {    return Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: [        Padding(          padding: const EdgeInsets.only(bottom: 8.0),          child: AppTextLarge(text: title),        ),        ...items,      ],    );  }  Widget _buildListItem({    required IconData icon,    required String title,    required Function() onTap,    bool showDivider = true,  }) {    return InkWell(      onTap: onTap,      child: Column(        children: [          Row(            children: [              Icon(icon),              const SizedBox(width: 8),              AppText(text: title),              const Spacer(),              const Icon(Icons.arrow_forward_ios, size: 16),            ],          ),          if (showDivider) ...[            const SizedBox(height: 8),            const Lign(indent: 20, endIndent: 0),          ],        ],      ),    );  }  Widget _buildSettingItem({    required BuildContext context,    required IconData icon,    required String title,    required Function() onTap,  }) {    return myCard(      ontap: onTap,      context: context,      fistWidget: Icon(icon),      title: title,      showLast: false,    );  }  void _showContactDialog(BuildContext context) {    showMessageDialog(      context,      title: translate("settings.contactUs"),      widget: Column(        crossAxisAlignment: CrossAxisAlignment.center,        children: [          AppText(text: 'WWW.Futela.com'),        ],      ),      isConfirmation: false,      isSale: false,    );  }}Widget myCard({  required BuildContext context,  required Function() ontap,  required Widget fistWidget,  required String title,  Widget secondWidget = const Icon(FluentIcons.ios_chevron_right_20_regular),  bool showLast = false,}) {  return InkWell(    onTap: ontap,    child: Column(      children: [        Row(          children: [            fistWidget,            sizedbox2,            AppText(text: title),            Spacer(),            secondWidget          ],        ),        sizedbox,        showLast ? Container() : Lign(indent: 20, endIndent: 0)      ],    ),  );} // ignore_for_file: prefer_const_constructors // // import 'package:fluentui_system_icons/fluentui_system_icons.dart'; // import 'package:flutter/cupertino.dart'; // import 'package:flutter/material.dart'; // import 'dart:convert'; // import 'package:flutter_translate/flutter_translate.dart'; // import 'package:futela/authentification/login_page.dart'; // import 'package:futela/language/choose_language.dart'; // import 'package:futela/modeles/user_provider.dart'; // import 'package:futela/screens/add.dart'; // import 'package:futela/theme/theme_provider.dart'; // import 'package:futela/widgets/app_text.dart'; // import 'package:futela/widgets/app_text_large.dart'; // import 'package:futela/widgets/bouton_next.dart'; // import 'package:futela/widgets/constantes.dart'; // import 'package:futela/widgets/lign.dart'; // import 'package:futela/widgets/message_widget.dart'; // import 'package:provider/provider.dart'; // import 'package:shared_preferences/shared_preferences.dart'; // import 'package:store_redirect/store_redirect.dart'; // import 'package:http/http.dart' as http; // // // class UserDetailsPage extends StatefulWidget { // //   const UserDetailsPage({ //     super.key, //   }); // //   @override //   State<UserDetailsPage> createState() => _UserDetailsPageState(); // } // // class _UserDetailsPageState extends State<UserDetailsPage> //     with TickerProviderStateMixin { //   late TabController _tabController; //   late PageController _pageController; //   int _currentPageIndex = 0; //   String number = ''; // //   TextEditingController numbers = TextEditingController(); //   TextEditingController name = TextEditingController(); //   TextEditingController firstname = TextEditingController(); // //   bool isLoading = false; //   bool isLoadingLogout = false; // //   // -------- fonction to select a picture or to take a picture ---------- //   showDialogConfirm() { //     //show a dialog box to ask user to confirm to remove from cart //     return showDialog<bool>( //       context: context, //       builder: (context) => AlertDialog( //         backgroundColor: Theme.of(context).colorScheme.inversePrimary, //         surfaceTintColor: Theme.of(context).colorScheme.inversePrimary, //         shape: RoundedRectangleBorder( //           borderRadius: borderRadius, //         ), //         content: AppText( //           text: translate('chat.show_message_3'), //           textAlign: TextAlign.center, //         ), //         actions: [ //           //camera method //           Container( //             decoration: BoxDecoration( //               borderRadius: borderRadius, //               color: Theme.of(context).colorScheme.secondary, //             ), //             child: ListTile( //               title: Center( //                 child: AppText( //                   text: translate('chat.button_4'), //                 ), //               ), //               titleAlignment: ListTileTitleAlignment.center, //               onTap: () async {}, //             ), //           ), //           sizedbox, //           //galarie method //           Container( //             decoration: BoxDecoration( //               borderRadius: borderRadius, //               color: Theme.of(context).colorScheme.secondary, //             ), //             child: ListTile( //               title: Center( //                 child: AppText( //                   text: translate('chat.button_5'), //                 ), //               ), //               titleAlignment: ListTileTitleAlignment.center, //               onTap: () async {}, //             ), //           ), // //           //cancel button //           TextButton( //             onPressed: () { //               Navigator.of(context).pop(false); //             }, //             child: AppText( //               text: translate('button.cancel'), //               color: Theme.of(context).colorScheme.onSecondary, //             ), //           ), //         ], //       ), //     ); //   } // //   // -------- Desconnected item from app method ---------- //   void showDialogLogout(BuildContext context) { //     final userProvider = Provider.of<UserProvider>(context, listen: false); // //     showDialog<bool>( //       context: context, //       builder: (context) => AlertDialog( //         backgroundColor: Theme.of(context).colorScheme.inversePrimary, //         surfaceTintColor: Theme.of(context).colorScheme.inversePrimary, //         shape: RoundedRectangleBorder( //           borderRadius: borderRadius, //         ), //         content: AppText( //           text: translate("settings.logout_message"), //           textAlign: TextAlign.center, //         ), //         actions: [ //           // Bouton Annuler //           TextButton( //             onPressed: () => Navigator.of(context).pop(), //             child: AppText( //               text: translate('button.cancel'), //               color: Theme.of(context).colorScheme.onSecondary, //             ), //           ), // //           // Bouton Déconnexion //           TextButton( //             onPressed: () async { //               setState(() { //                 isLoadingLogout = true; //               }); // //               // Appel de la méthode logout du provider //               await userProvider.logout(); // //               setState(() { //                 isLoadingLogout = false; //               }); // //               // Fermer la boîte de dialogue et rediriger vers la page de connexion //               Navigator.of(context).pop(); //               Navigator.of(context).pushReplacementNamed('/main'); //             }, //             child: isLoadingLogout //                 ? CupertinoActivityIndicator( //                     color: Theme.of(context).colorScheme.primary) //                 : AppText(text: translate("settings.logout")), //           ), //         ], //       ), //     ); //   } // // //   @override //   void initState() { //     super.initState(); // //     _tabController = TabController(length: 2, vsync: this); //     _pageController = PageController(initialPage: _currentPageIndex); //     _loadUserData(); //     _printUserPreferences(); // Appel de la méthode pour imprimer les données // //     // Écouter les changements d'onglets et mettre à jour la page correspondante //     _tabController.addListener(() { //       if (_tabController.index != _currentPageIndex) { //         _pageController.jumpToPage(_tabController.index); //       } //     }); // //     // Écouter les changements de page et mettre à jour l'index de l'onglet //     _pageController.addListener(() { //       if (_pageController.page!.round() != _currentPageIndex) { //         _tabController.animateTo( //           _pageController.page!.round(), //         ); //       } //     }); // //   } // //   String? coverImage; //   Future<void> _loadUserData() async { //     final prefs = await SharedPreferences.getInstance(); //     String? userData = prefs.getString('userData'); // //     if (userData != null) { //       final Map<String, dynamic> userMap = json.decode(userData); //       setState(() { //         name.text = userMap['name'] ?? ''; //         numbers.text = userMap['phoneNumber'] ?? ''; //         firstname.text = userMap['firstname'] ?? ''; //         coverImage = userMap['cover'] != null //             ? 'http://www.futela.com/api/users/${userMap['cover']}' //             : null; // Remplacez par l'URL de votre serveur //       }); //     } //   } // //   late Future<Map<String, dynamic>?> userProfile; // // //   Future<Map<String, dynamic>?> fetchUserProfile(int userId) async { //     final url = Uri.parse('http://www.futela.com/api/app/users/$userId'); //     try { //       final response = await http.get(url, headers: { //         'Accept': 'application/json', //       }); // //       if (response.statusCode == 200) { //         return json.decode(response.body); //       } else { //         print('Erreur lors du chargement des données : ${response.statusCode}'); //         return null; //       } //     } catch (e) { //       print('Exception : $e'); //       return null; //     } //   } // // //   Future<void> _printUserPreferences() async { //     final prefs = await SharedPreferences.getInstance(); //     final keys = prefs.getKeys(); // Récupère toutes les clés // //     print("Données utilisateur dans SharedPreferences :"); //     for (String key in keys) { //       final value = prefs.get(key); //       print('$key: $value'); // Imprime chaque clé et sa valeur //     } //   } // //   @override //   void dispose() { //     _tabController.dispose(); //     _pageController.dispose(); //     super.dispose(); //   } // //   @override //   Widget build(BuildContext context) { //     final userProvider = Provider.of<UserProvider>(context); // //     return Scaffold( //       backgroundColor: Theme.of(context).colorScheme.background, //       appBar: AppBar( //         backgroundColor: Colors.transparent, //         surfaceTintColor: Theme.of(context).colorScheme.background, //         elevation: 0, //         foregroundColor: Theme.of(context).colorScheme.onSecondary, //         title: AppText( //           text: 'Profil', //           color: Theme.of(context).colorScheme.inverseSurface, //         ), //       ), //       body: SafeArea( //         child: Padding( //           padding: const EdgeInsets.only(left: 20.0, right: 20.0), //           child: Column( //             children: [ // // //               sizedbox, //               Column( //                 crossAxisAlignment: CrossAxisAlignment.center, //                 children: [ //                   Stack( //                     alignment: Alignment.bottomRight, //                     children: [ //                       Container( //                         height: 130, //                         width: 130, //                         padding: const EdgeInsets.all(50), //                         decoration: BoxDecoration( //                           shape: BoxShape.circle, //                           border: Border.all( //                             color: Theme.of(context).colorScheme.tertiary, //                             width: 2, //                           ), //                           color: Theme.of(context).highlightColor, //                         ), //                         child: coverImage != null //                             ? ClipOval( //                                 child: Image.network( //                                   coverImage!, //                                   fit: BoxFit.cover, //                                 ), //                               ) //                             : null //                       ), //                       Positioned( //                         child: InkWell( //                           onTap: () async => showDialogConfirm(), //                           child: Container( //                             height: 40, //                             width: 40, //                             decoration: BoxDecoration( //                               shape: BoxShape.circle, //                               border: Border.all( //                                 color: Theme.of(context).colorScheme.tertiary, //                                 width: 2, //                               ), //                               color: Theme.of(context).colorScheme.secondary, //                             ), //                             child: Icon( //                               FluentIcons.camera_28_regular, //                               color: Theme.of(context).colorScheme.onBackground, //                             ), //                           ), //                         ), //                       ), //                     ], //                   ), //                 ], //               ), //               sizedbox, //               Container( //                 padding: EdgeInsets.only( //                     left: 5.0, right: 5.0, bottom: 5.0, top: 5.0), //                 decoration: BoxDecoration( //                   borderRadius: BorderRadius.circular(12), //                   color: Theme.of(context).highlightColor, //                 ), // //                 height: 45.0, // Hauteur totale du TabBar //                 child: TabBar( //                   controller: _tabController, //                   automaticIndicatorColorAdjustment: false, //                   tabs: [ //                     Tab( //                       child: Padding( //                         padding: const EdgeInsets.symmetric( //                             horizontal: //                                 8.0), // Espace de 8 pixels à gauche et à droite //                         child: Container( //                           height: 40.0, // Hauteur fixe pour chaque onglet //                           alignment: Alignment.center, //                           child: Text( //                             translate('User'), //                             style: TextStyle(fontSize: 16.0), //                           ), //                         ), //                       ), //                     ), //                     // Tab( //                     //   child: Padding( //                     //     padding: const EdgeInsets.symmetric(horizontal: 8.0), //                     //     child: Container( //                     //       height: 40.0, //                     //       alignment: Alignment.center, //                     //       child: Text( //                     //         translate('Files'), //                     //         style: TextStyle(fontSize: 16.0), //                     //       ), //                     //     ), //                     //   ), //                     // ), //                     Tab( //                       child: Padding( //                         padding: const EdgeInsets.symmetric(horizontal: 8.0), //                         child: Container( //                           height: 40.0, //                           alignment: Alignment.center, //                           child: Text( //                             translate('Settings'), //                             style: TextStyle(fontSize: 16.0), //                           ), //                         ), //                       ), //                     ), //                   ], //                   dividerColor: Colors.transparent, // //                   indicator: BoxDecoration( //                     color: Theme.of(context).colorScheme.primary, //                     borderRadius: BorderRadius.circular( //                         8), // Coins arrondis pour l'indicateur //                   ), //                   indicatorSize: TabBarIndicatorSize.tab, // //                   labelColor: Theme.of(context).colorScheme.inversePrimary, //                   unselectedLabelColor: Colors.grey, //                   labelPadding: //                       EdgeInsets.zero, // Réinitialiser le padding des labels //                 ), //               ), //               Expanded( //                 child: PageView( //                   controller: _pageController, //                   onPageChanged: (index) { //                     // Vérifiez si le widget est encore monté avant de mettre à jour l'état //                     if (mounted) { //                       setState(() { //                         _currentPageIndex = index; //                       }); //                     } //                   }, //                   children: [ //                     SingleChildScrollView(child: user(context, userProvider)), //                     // Files(), //                     SingleChildScrollView(child: setting()), //                   ], //                 ), //               ), //             ], //           ), //         ), //       ), //     ); //   } // //   Widget user(BuildContext context, userProvider) { //     return Column( //       children: [ //         userProvider.isLoggedIn //             ? Column( //                 crossAxisAlignment: CrossAxisAlignment.start, //                 children: [ //                   sizedbox, //                   Container( //                     decoration: BoxDecoration( //                         borderRadius: borderRadius, //                         border: Border.all( //                           color: Theme.of(context).colorScheme.tertiary, //                         )), //                     height: 50.0, //                     child: CupertinoTextField( //                       padding: EdgeInsets.only(left: 15), //                       controller: name, //                       placeholder: '', //                       style: TextStyle( //                         color: Theme.of(context).colorScheme.inverseSurface, //                         fontFamily: 'Montserrat', //                       ), //                       keyboardType: TextInputType.text, //                       decoration: BoxDecoration( //                         borderRadius: borderRadius, //                       ), //                       prefix: Padding( //                         padding: const EdgeInsets.only(left: 15.0), //                         child: Icon(CupertinoIcons.person), //                       ), //                     ), //                   ), //                   sizedbox, //                   Container( //                     decoration: BoxDecoration( //                         borderRadius: borderRadius, //                         border: Border.all( //                           color: Theme.of(context).colorScheme.tertiary, //                         )), //                     height: 50.0, //                     child: CupertinoTextField( //                       padding: EdgeInsets.only(left: 15), //                       controller: firstname, //                       placeholder: '', //                       style: TextStyle( //                         color: Theme.of(context).colorScheme.inverseSurface, //                         fontFamily: 'Montserrat', //                       ), //                       keyboardType: TextInputType.text, //                       decoration: BoxDecoration( //                         borderRadius: borderRadius, //                       ), //                       prefix: Padding( //                         padding: const EdgeInsets.only(left: 15.0), //                         child: Icon(CupertinoIcons.person), //                       ), //                     ), //                   ), //                   sizedbox, //                   Container( //                     decoration: BoxDecoration( //                         borderRadius: borderRadius, //                         border: Border.all( //                           color: Theme.of(context).colorScheme.tertiary, //                         )), //                     height: 50.0, //                     child: CupertinoTextField( //                       padding: EdgeInsets.only(left: 15), //                       controller: numbers, //                       style: TextStyle( //                         color: Theme.of(context).colorScheme.inverseSurface, //                         fontFamily: 'Montserrat', //                       ), //                       keyboardType: TextInputType.text, //                       decoration: BoxDecoration( //                         borderRadius: borderRadius, //                       ), //                       prefix: Padding( //                         padding: const EdgeInsets.only(left: 15.0), //                         child: Icon(CupertinoIcons.phone), //                       ), //                     ), //                   ), //                   sizedbox, //                   sizedbox, //                 ], //               ) //             : Column( //                 children: [ //                   SizedBox( //                     height: MediaQuery.of(context).size.height * 0.2, //                   ), //                   Icon( //                     CupertinoIcons.person, //                     size: 50, //                   ), //                   AppTextLarge( //                     text: "Connectez-vous pour voir votre profil", //                     size: 16, //                     textAlign: TextAlign.center, //                   ), //                   sizedbox, //                   AppText( //                     text: //                         "Une fois votre connexion effectuée, vos identifient apparaitrons ici!", //                     textAlign: TextAlign.center, //                   ), //                 ], //               ), //         sizedbox, //         NextButton( //           height: 40, //           color: Theme.of(context).colorScheme.primary, //           width: 200, //           onTap: () { //             if (userProvider.isLoggedIn) { //               userProvider.logout(); //             } else { //               showModalBottomSheet( //                 backgroundColor: Theme.of(context).colorScheme.background, //                 context: context, //                 isScrollControlled: true, //                 builder: (BuildContext context) { //                   return LoginPage( //                     onLoginSuccess: (userData) { //                       userProvider.login( //                         userData['username'], //                         userData['password'], //                       ); //                     }, //                   ); //                 }, //               ); //             } //           }, //           child: AppText( //             text: userProvider.isLoggedIn ? "Déconnexion" : "Connexion", //             color: Colors.white, //           ), //         ), //       ], //     ); //   } //   // //   // Widget Files() { //   //   return Scaffold( //   //     body: GridView.builder( //   //       gridDelegate: SliverGridDelegateWithFixedCrossAxisCount( //   //         crossAxisCount: 3, //   //         mainAxisSpacing: 0.0, //   //         crossAxisSpacing: 10.0, //   //       ), //   //       itemCount: 5, //   //       itemBuilder: (BuildContext context, int index) { //   //         return Container( //   //           padding: EdgeInsets.only(top: 10), //   //           child: Stack( //   //             alignment: Alignment.center, //   //             children: [ //   //               ClipRRect( //   //                 borderRadius: BorderRadius.circular(8.0), //   //                 // child: buildNetworkImage( //   //                 //     videos[index].imageUrl, false, 0), //   //               ), //   //               GestureDetector( //   //                 onTap: () {}, //   //                 child: Container( //   //                   width: 150.0, //   //                   height: 200.0, //   //                   decoration: BoxDecoration( //   //                     borderRadius: borderRadius, //   //                     color: Theme.of(context).highlightColor, //   //                   ), //   //                   child: Icon( //   //                     FluentIcons.image_16_filled, //   //                     color: Theme.of(context).colorScheme.onBackground, //   //                   ), //   //                 ), //   //               ), //   //             ], //   //           ), //   //         ); //   //       }, //   //     ), //   //     floatingActionButton: FloatingActionButton( //   //       backgroundColor: Theme.of(context).colorScheme.primary, //   //       onPressed: () { //   //         Navigator.push(context, //   //             MaterialPageRoute(builder: (context) => PostArticlePage())); //   //       }, //   //       shape: CircleBorder(), //   //       child: Icon( //   //         FluentIcons.add_48_regular, //   //         color: Theme.of(context).colorScheme.onBackground, //   //       ), //   //     ), //   //   ); //   // } // //   Widget setting() { //     return Column( //       crossAxisAlignment: CrossAxisAlignment.start, //       children: [ //         Container( //           margin: const EdgeInsets.only(top: 8), //           decoration: BoxDecoration( //             color: Theme.of(context).highlightColor, //             borderRadius: borderRadius, //           ), //           child: Column( //             children: [ //               card( //                 ontap: () { //                   showLanguagePopup(context: context); //                 }, //                 icon: Icons.translate_outlined, //                 title: translate("settings.language"), //                 icon2: Icons.switch_right_outlined, //                 showLast: false, //               ), //               Consumer<ThemeProvider>( //                 builder: (context, provider, child) { //                   bool theme = provider.currentTheme; //                   return myCard( //                     ontap: () => provider.changeTheme(!theme), //                     context: context, //                     fistWidget: //                         const Icon(FluentIcons.brightness_high_48_filled), //                     title: theme //                         ? translate('theme.light') //                         : translate('theme.dark'), //                     secondWidget: const Icon(FluentIcons.arrow_fit_20_regular), //                     showLast: true, //                   ); //                 }, //               ), //             ], //           ), //         ), //         sizedbox, //         sizedbox, //         AppText( //           text: translate("settings.support_and_feedback").toUpperCase(), //         ), //         Container( //           margin: const EdgeInsets.only( //             top: 8, //           ), //           decoration: BoxDecoration( //             color: Theme.of(context).highlightColor, //             borderRadius: borderRadius, //           ), //           child: Column( //             children: [ //               myCard( //                 ontap: () { //                   showMessageDialog(context, //                       title: translate("settings.contactUs"), //                       widget: Column( //                         crossAxisAlignment: CrossAxisAlignment.center, //                         children: [ //                           AppText(text: 'WWW.Futela.com'), //                         ], //                       ), //                       isConfirmation: false, //                       isSale: false); //                 }, //                 context: context, //                 fistWidget: const Icon(FluentIcons.call_48_regular), //                 title: translate("settings.contactUs"), //                 showLast: false, //               ), //               myCard( //                 ontap: () { //                   // donner les avis //                   StoreRedirect.redirect( //                     androidAppId: 'com.naara.futela', //                     iOSAppId: 'com.naara.futela', //                   ); //                 }, //                 context: context, //                 fistWidget: const Icon(FluentIcons.star_half_28_regular), //                 title: translate("settings.leaveReview"), //                 showLast: true, //               ), //             ], //           ), //         ), //         const SizedBox(height: 20), //         AppText( //           text: translate("settings.app").toUpperCase(), //         ), //         Container( //           margin: const EdgeInsets.only( //             top: 8, //           ), //           decoration: BoxDecoration( //             color: Theme.of(context).highlightColor, //             borderRadius: borderRadius, //           ), //           child: Column( //             children: [ //               myCard( //                 ontap: () { //                   // myLaunchUrl( //                   //     'https://raw.githubusercontent.com/Pacome0106/isKiling_app_info/main/README.md'); //                 }, //                 context: context, //                 fistWidget: const Icon(FluentIcons.shield_error_24_regular), //                 title: translate("settings.privacy_policy"), //                 showLast: false, //               ), //               myCard( //                 ontap: () { //                   // myLaunchUrl( //                   //     'https://raw.githubusercontent.com/Pacome0106/isKiling_app_info/main/conditions.md'); //                 }, //                 context: context, //                 fistWidget: //                     const Icon(FluentIcons.book_question_mark_24_regular), //                 title: translate("settings.terms_and_conditions"), //                 showLast: true, //               ), //             ], //           ), //         ), //         const SizedBox(height: 20), //         Container( //           margin: const EdgeInsets.only( //             top: 8, //           ), //           decoration: BoxDecoration( //             color: Theme.of(context).highlightColor, //             borderRadius: borderRadius, //           ), //           child: myCard( //             ontap: () => showDialogLogout(context), //             context: context, //             fistWidget: const Icon(FluentIcons.sign_out_24_regular), //             secondWidget: const SizedBox(), //             title: translate("settings.logout"), //             showLast: true, //           ), //         ), //         sizedbox, //         sizedbox, //       ], //     ); //   } // //   Widget myCard({ //     required BuildContext context, //     required Function() ontap, //     required Widget fistWidget, //     required String title, //     Widget secondWidget = const Icon(FluentIcons.ios_chevron_right_20_regular), //     bool showLast = false, //   }) { //     return InkWell( //       onTap: ontap, //       child: Column( //         children: [ //           ListTile( //             leading: fistWidget, //             title: Container( //               alignment: Alignment.centerLeft, //               child: AppText( //                 text: title, //               ), //             ), //             trailing: secondWidget, //             // subtitle: Container(), //           ), //           if (!showLast) const Lign(indent: 60, endIndent: 0) //         ], //       ), //     ); //   } // //   Widget card({ //     required VoidCallback ontap, //     required IconData icon, //     required String title, //     IconData icon2 = Icons.navigate_next_outlined, //     bool showLast = false, //   }) { //     return InkWell( //       onTap: ontap, //       child: Column( //         children: [ //           ListTile( //             leading: Icon(icon), //             title: Container( //               alignment: Alignment.centerLeft, //               child: AppText( //                 text: title, //               ), //             ), //             trailing: Icon(icon2), //           ), //           if (!showLast) //             Container( //               margin: EdgeInsets.only(left: 60), //               height: 0.5, //               color: Theme.of(context).colorScheme.secondary, //             ), //         ], //       ), //     ); //   } // }